#!/bin/bash
# Script to remove nodes from Puppet Enterprise dashboard and Puppet CA
# Exit codes are cumulative:
# 0 - no error
# 1 - node not found in dashboard
# 2 - node removal from dashboard failed
# 4 - node not found in Puppet CA
# 8 - node removal from CA failed
# 99 - set up validation failed (utility missing etc)

TASKSDIR="/opt/puppet/share/puppet-dashboard/lib/tasks"
RAKECMD="/opt/puppet/bin/rake"
RACKLIST="node:list"
RAKERM="node:del name="
export RACK_ENV="production"
PUPPETCMD="/opt/puppet/bin/puppet"
PUPPETLIST="cert list"
PUPPETRM="cert clean"
let EXITCODE=0

if [ -z $1 ]; then
  echo "You must supply a node to remove from the CA and dashboard"
  exit 99
fi
NODE=$1

if ! [ -f $RAKECMD ]; then
  echo "${RAKECMD} doesn't exist - exiting"
  exit 99
fi

if ! [ -f $PUPPETCMD ]; then
  echo "${PUPPETCMD} doesn't exist - exiting"
  exit 99
fi

if ! [ -d $TASKSDIR ]; then
  echo "Directory ${TASKSDIR} doesn't exist - exiting"
  exit 99
fi

cd $TASKSDIR

echo "Removing node from the dashboard"

$RAKECMD $RACKLIST 2> /dev/null | grep "^${NODE}$"
if [ $? -ne 0 ]; then
  echo "Could not find node ${NODE} in the dashboard - not attempting to remove"
  let EXITCODE=$EXITCODE+1
else
  $RAKECMD $RAKERM$NODE 2> /dev/null
  if [ $? -ne 0 ]; then
    echo "Some error occurred - you should probably investigate"
    let EXITCODE=$EXITCODE+2
  fi
fi

echo "Removing puppet certificate"

$PUPPETCMD $PUPPETLIST $NODE | grep "^${NODE}$"
if [ $? -ne 0 ]; then
  echo "Could not find certificate for node ${NODE}"
  let EXITCODE=$EXITCODE+4
else
  $PUPPETCMD $PUPPETRM $1
  if [ $? -ne 0 ]; then
    let EXITCODE=$EXITCODE+8
  fi
fi
exit $EXITCODE
